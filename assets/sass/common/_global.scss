html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  background-color: #14032C;
  overflow-x: hidden;
  font-family: $font-family-agency;
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

a {
  color: white;
  text-decoration: none;
}

.link-decorator {
  color: $primary;
  text-decoration: underline $primary;
}

.main-bg {
  width: 100%;
}

.secondary-bg {
  background: transparent $purple-gradient 0% 0% no-repeat padding-box;
  overflow: hidden;
}

.fadeIn {
  animation: fadeIn 2s 1s ease-in-out forwards;
  @keyframes fadeIn {
    from {
      transform: translateX(5%);
      opacity: 0;
    }
    to {
      opacity: 1;
      transform: translateX(0%);
    }
  }
}

.fadeInL {
  animation: fadeInL 2s 1s ease-in-out forwards;
  @keyframes fadeInL {
    from {
      transform: translateX(-5%);
      opacity: 0;
    }
    to {
      opacity: 1;
      transform: translateX(0%);
    }
  }
}

.fadeOut {
  animation: fadeOut 1s ease-in-out forwards;
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
      transform: translate(5%, -5%);
    }
  }
}

.fadeOutL {
  animation: fadeOutL 1s ease-in-out forwards;
  @keyframes fadeOutL {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
      transform: translate(-5%, -5%);
    }
  }
}

@mixin fadeUp($delay) {
  @if $delay == 0 {
    animation: fadeUp 2s ease-in-out forwards;
  } @else {
    position: relative;
    animation: fadeUp 2s $delay ease-in-out forwards;
  }
}

@keyframes fadeUp {
  from {
    transform: translateY(20%);
    opacity: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0%);
  }
}

.fluid-img {
  max-width: 100%;
  height: auto;
}

.stars {
  background-image: url(../images/stars-bg.png);
}